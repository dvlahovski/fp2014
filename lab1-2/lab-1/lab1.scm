;имплементация на |x| посредством if - начин на извикаване: (my-abs -5)
(define (my-abs x)
  (if (> x 0)
      x
      (- x)))

;имплементация на |x| посредством cond - начин на извикаване: (my-abs-2 -5)
(define (my-abs-2 x)
  (cond
    ((> x 0) x)
    ((= x 0) 0)
    (else (- x))))

;функция пресмятаща x^2 - начин на извикване (square 5)
(define (square x)
  (* x x))

;функция пресмятаща x^3 - начин на извикване (cube 3)
(define (cube x)
  (* x x x))

;функция намираща по-малкото от 2 числа чрез if - начин на извикване (my-min 3 5)
(define (my-min x y)
  (if (> x y)
      y
      x))

;функция намираща по-малкото от 2 числа чрез abs - начин на извикване (my-min-2 3 5)
(define (my-min-2 x y)
  (/ (- (+ x y) (my-abs (- x y))) 2))

;предикат проверяващ дали едно число е четно - начин на извикване (my-even? 2)
(define (my-even? x)
  (= (remainder x 2) 0))

;предикат проверяващ дали едно число е нечетно - начин на извикване (my-odd? 2)
(define (my-odd? x)
  (not (my-even? x)))

;предикат проверяващ дали едно число е положително - начин на извикване (my-positive? 5)
(define (my-positive? x)
  (> x 0))

;предикат проверяващ дали едно число е отрицателно - начин на извикване (my-negative? 5)
(define (my-negative? x)
  (< x 0))

;функция пресмятаща средно аритметичното на 2 числа - начин на извикване (average 2 3)
(define (average x y)
  (/ (+ x y) 2))

;израз пресмятащ средно аритметичното от квадратите на 2 числа
(average (square 5) (square 6))
(+ 1 2 3 4 5 6)
(/ 3 5)
